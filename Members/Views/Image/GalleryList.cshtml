@model IEnumerable<Members.Models.GalleryViewModel>

@{
    ViewData["Title"] = "Image Galleries";
}

@if (TempData["SuccessMessage"] != null)
{
    @* Ensure `fade show` classes are present *@
    <div class="alert alert-success fade show auto-hide-alert" role="alert">
        @TempData["SuccessMessage"]
    </div>
}
@if (TempData["ErrorMessage"] != null)
{
    @* Ensure `fade show` classes are present *@
    <div class="alert alert-danger fade show auto-hide-alert" role="alert">
        @TempData["ErrorMessage"]
    </div>
}

<!-- Title: Image Galleries -->
<h1 class="text-black mb-2 mt-4 text-center"><i class="bi bi-image"></i> Image Galleries</h1>

<!-- Row and Column setup for Card -->
<div class="row justify-content-center m-0 p-0">
    <div class="col-lg-4 col-md-6 m-1 p-0">

        <!-- Shadowed Card -->
        <div class="card rounded-2 border shadow m-1 p-0">
            <div class="card-body rounded-2 m-0 p-0">
                
                <!-- Check to see if there are any Galleries -->
                @if (Model != null && Model.Any())
                {
                    <!-- List of Galleries -->
                    <ul class="card list-group list-group-flush">

                        <!-- Loop through each gallery and create a list item for it -->                        
                        @foreach (var gallery in Model)
                        {
                            <!-- List item with link to the gallery view -->
                            <li class="list-group-item bg-transparent" style="cursor: pointer;">
                                <a asp-controller="Image" asp-action="GalleryView" asp-route-galleryName="@gallery.Name" class="nav-link d-block"><i class="bi bi-images"></i> @gallery.Name (Images: @gallery.ImageCount)</a>
                            </li>                         
                        }
                    </ul>  
                }
                else
                {
                    <div class="py-4 text-center">
                        <p class="text-black">No galleries available yet.</p>
                    </div>
                }

            </div>
        </div>
    </div>
</div>

@if (User.IsInRole("Admin") || User.IsInRole("Manager"))
{
    <div class="my-4 text-center">
        <a asp-controller="Image" asp-action="ManageGalleries" class="btn btn-sm btn-back text-gray rounded-2 shadow"><i class="bi bi-shield-lock"></i> Manage Galleries</a>
    </div>
}

@section Styles {
    <style>
        /* Styles to remove the borders from the list items */
        .list-group-item {
            border-bottom: none !important;
        }

            .list-group-item:first-child {
                border-top: none !important;
            }

            .list-group-item:last-child {
                border-bottom: none !important;
            }

            /* CSS to control the link color on hover/focus */
            /* Target the link directly within the list item on hover/focus */
            .list-group-item:hover a.text-black,
            .list-group-item:focus a.text-black,
            .list-group-item a.text-black:hover,
            .list-group-item a.text-black:focus {
                color: #3b3726 !important; 
            }

            /* Optional: Adjust the background color of the list item on hover/focus */
            .list-group-item:hover,
            .list-group-item:focus {
                background-color: rgba(0, 0, 0, 0.05) !important; /* Example subtle background */
            }

        a:hover,
        a:focus {
            font-weight:600;
            /* color: forestgreen !important; */
        }
    </style>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Select all alerts that we want to auto-hide
            var alertsToAutoHide = document.querySelectorAll('.auto-hide-alert');

            alertsToAutoHide.forEach(function(alertElement) {
                setTimeout(function() {
                    // 1. Remove the 'show' class to trigger the CSS fade-out transition.
                    //    Bootstrap's CSS handles the animation when 'show' is removed.
                    alertElement.classList.remove('show');

                    // 2. Listen for the 'transitionend' event. This ensures the element is
                    //    removed from the DOM only after the fade-out animation is complete.
                    alertElement.addEventListener('transitionend', function() {
                        alertElement.remove(); // Remove the alert element from the DOM
                    }, { once: true }); // The '{ once: true }' option ensures the event listener is automatically removed after it fires once.
                }, 2500); // 5000 milliseconds = 5 seconds: Time before the alert starts to fade out.
            });
        });
    </script>
}
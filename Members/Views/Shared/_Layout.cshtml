@using Microsoft.AspNetCore.Identity
@using System.IO;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.AspNetCore.Mvc.ViewComponents;
@using Microsoft.EntityFrameworkCore;
@using System.Linq;
@using System.Threading.Tasks;
@using System.Collections.Generic;
@using Members.Data;
@using Members.Models;

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@{
    // This Site
    string siteURL = Environment.GetEnvironmentVariable("SITE_URL_ILLUSTRATE")!;
    string siteName = Environment.GetEnvironmentVariable("SITE_NAME_ILLUSTRATE")!;
    string siteOrg = Environment.GetEnvironmentVariable("SITE_ORG")!;

    // Set Site Name and Description (Change as needed)
    string description = ViewData["Description"]?.ToString() ?? "Welcome to " + siteName + ".";

    string siteNameShort = siteName;
    string siteOrganization = siteOrg;

    // Set default values
    string pageTitle = ViewData["Title"]?.ToString() ?? siteName;

    // Page Share Settings - (shows on "PageShare" card when a link is shared)
    string ogSite_Name = siteOrganization;
    string ogTitle = ViewData["OGTitle"]?.ToString() ?? pageTitle;
    string ogDescription = ViewData["OGDescription"]?.ToString() ?? description;
    string ogURL = ViewData["OGURL"]?.ToString() ?? siteURL;
    string canonical = ViewData["Canonical"]?.ToString() ?? siteURL + "/Info/Index";

    // Default Link Share Image (Change as needed)
    string ogImage = ViewData["OGImage"]?.ToString() ?? siteURL + "/Images/LinkImages/SmallLogo.png";
    string ogImageWidth = "1000";
    string ogImageHeight = "1000";

    // Get dynamic colors from ViewBag
    var dynamicColors = ViewBag.DynamicColors as Dictionary<string, string> ?? new Dictionary<string, string>();
           
   
}

<!DOCTYPE html>
<html lang="en">
<head>

    <title>@pageTitle</title>

    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="content-type" content="text/html; charset=utf-8" />
    <meta name="mobile-web-app-capable" content="no">
    <meta name="description" content="@description" />
    <link rel="canonical" href="@canonical" />

    <link rel="icon" href="/favicon.ico" type="image/x-icon">
    <link rel="apple-touch-icon" sizes="180x180" href="lib/icons/apple-touch-icon.png">

    <link rel="icon" type="image/png" sizes="32x32" href="favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="favicon-16x16.png">
    <link rel="icon" type="image/png" sizes="192x192" href="favicon-192x192.png">
    <link rel="icon" type="image/png" sizes="512x512" href="favicon-512x512.png">
    <link rel="manifest" href="/lib/icons/site.webmanifest">

    <meta property="fb:app_id" content="966242223397117" />

    <meta property="og:type" content="website" />
    <meta property="og:locale" content="en_US" />
    <meta property="og:title" content="@ogTitle" />
    <meta property="og:determiner" content="The" />
    <meta property="og:description" content="@ogDescription" />
    <meta property="og:site_name" content="@ogSite_Name" />
    <meta property="og:url" content="@ogURL" />
    <meta property="og:image:url" content="@ogImage" />
    <meta property="og:image:alt" content="Logo Image" />
    <meta property="og:image:type" content="image/jpeg" />
    <meta property="og:image:width" content=@ogImageWidth />
    <meta property="og:image:height" content=@ogImageHeight />

    <meta name="twitter:card" content="photo" />
    <meta name="twitter:title" content="@ogTitle" />
    <meta name="twitter:image" content="@ogImage" />
    <meta name="twitter:image:width" content=@ogImageWidth />
    <meta name="twitter:image:height" content=@ogImageHeight />
    
    <!-- JQuery -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>

    <!-- Bootstrap 5.3.2 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

    <!-- Bootstrap Font Icons -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css" />

    <!-- PDF.js -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf_viewer.min.css" integrity="sha512-tze+o/xG0w3yxxE8xe32piisVvI/LfcEuf6LW7lFLUxhio2SfFQ9mQ0TqB0avvonmxUXT7/l8+fnWkR03u85fQ==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.min.js" integrity="sha512-q+4liFwdPC/bNdhUpZx6aXDx/h77yEQtn4I1slHydcbZK34nLaR3cAeYSJshoxIOq3mjEf7xJE8YWIUHMn+oCQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

    <!-- Project CSS files FIRST -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/fontsize.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/buttons.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site-colors.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/dynamic-colors.css" asp-append-version="true" />

    <!-- Dynamic Colors LAST to override static CSS -->
    <style>
        :root {
            @foreach (var color in dynamicColors)
            {
                @($"{color.Key}: {color.Value} !important;")
            }
        }
    </style>

    @RenderSection("Styles", required: false)

</head>

<body class="body-bg">  

    <partial name="_PartialHeader" />

    <div id="MainContainer" class="m-0 p-0">
        <main role="main" class="m-0 p-0">
            @RenderBody()
        </main>
    </div>

    <partial name="_PartialFooter" />

    <script>
        //Persistant Footer approach using CSS flexbox-like behavior
        function adjustFooterPositionFlexible() {
            var body = document.body;
            var footer = document.getElementById('footer');

            if (!footer) return;

            // Ensure body takes full height
            if (body.style.minHeight !== '100vh') {
                body.style.minHeight = '100vh';
                body.style.display = 'flex';
                body.style.flexDirection = 'column';
            }

            // Find the main content wrapper (everything before footer)
            var mainContent = document.getElementById('MainContainer');
            if (mainContent && !mainContent.style.flex) {
                mainContent.style.flex = '1';
            }
        }

        // Debounced version to prevent excessive calls during resize
        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        // Use the debounced version for resize events - FIXED TO CALL THE RIGHT FUNCTION
        const debouncedAdjustFooter = debounce(adjustFooterPositionFlexible, 100);

        // Call the function when the page loads and when it resizes - FIXED TO CALL THE RIGHT FUNCTION
        window.addEventListener('load', adjustFooterPositionFlexible);
        window.addEventListener('resize', debouncedAdjustFooter);
        window.addEventListener('DOMContentLoaded', adjustFooterPositionFlexible);

        // Export for external use
        window.adjustFooterPosition = adjustFooterPositionFlexible;
    </script>
    
    <script src="~/lib/jquery-validation/dist/jquery.validate.min.js"></script>    
    <script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.min.js"></script>

    <script src="~/js/dynamic-colors.js" asp-append-version="true"></script>
   
    @await RenderSectionAsync("Scripts", required: false)

</body>
</html>
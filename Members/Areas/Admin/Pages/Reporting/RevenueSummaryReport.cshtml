@page
@model Members.Areas.Admin.Pages.Reporting.RevenueSummaryReportModel
@{
    ViewData["Title"] = "Revenue Summary Report";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<!-- Top Button placed here -->
<button onclick="topFunction()" id="top-button" title="Go to top">Top</button>

<div class="mt-4 px-1">

    <!-- Title -->
    <div class="text-center">
        <h2 class="text-black">@ViewData["Title"]</h2>
    </div>

    <!-- Buttons Form -->
    <form method="get" class="mb-3">
        <div class="row align-items-end gx-2 gy-3 mx-0 p-0">

            <!-- Start Date -->
            <div class="col-md-3 px-0 me-2">
                <label for="StartDate" class="ms-2 mb-0 form-label">Start Date:</label>
                <input asp-for="StartDate" type="date" class="form-control shadow" id="StartDate" name="StartDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" />
            </div>

            <!-- End Date -->
            <div class="col-md-3 px-0 me-2">
                <label for="EndDate" class="ms-2 mb-0 form-label">End Date:</label>
                <input asp-for="EndDate" type="date" class="form-control shadow" id="EndDate" name="EndDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" />
            </div>

            <!-- Run Report Button -->
            <div class="col-md-auto px-0">
                <button type="submit" class="btn btn-success rounded-2 ms-2 px-2 shadow"><i class="bi bi-funnel-fill"></i> Run Report</button>
            </div>

            @if (Model.SummaryData != null) // Check if data has been generated
            {
                <!-- Export to CSV Buttonn (Only show if there is report data) -->
                <div class="col-md-auto px-0">
                    <button type="button" class="btn btn-success rounded-2 ms-2 px-2 shadow"
                            data-bs-toggle="modal" data-bs-target="#exportRevenueSummaryConfirmModal">
                        <i class="bi bi-file-earmark-spreadsheet-fill"></i> Export to CSV
                    </button>
                </div>

                <!-- Print Button (Only show if there is report data) -->
                <div class="col-md-auto px-0">
                    <button type="button" class="btn btn-success rounded-2 ms-2 px-2 shadow" id="printReportButton">
                        <i class="bi bi-printer-fill"></i> Print
                    </button>
                </div>
            }
        </div>
    </form>

    <!-- Export Confirmation Modal -->
    <div class="modal fade" id="exportRevenueSummaryConfirmModal" tabindex="-1" aria-labelledby="exportRevenueSummaryConfirmModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content bg-Card-Modal">
                <div class="modal-header">
                    <h5 class="modal-title" id="exportRevenueSummaryConfirmModalLabel">Confirm Export</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to export the Revenue Summary to CSV?
                    The report will be generated for the period:
                    <strong>@Model.StartDate.ToString("yyyy-MM-dd")</strong> to <strong>@Model.EndDate.ToString("yyyy-MM-dd")</strong>.
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary rounded-2 shadow" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" id="confirmExportRevenueSummaryBtn rounded-2" class="btn btn-primary shadow"><i class="bi bi-file-earmark-spreadsheet-fill"></i> Confirm Export</button>
                </div>
            </div>
        </div>
    </div>

    @if (Model.SummaryData != null)
    {
        var summary = Model.SummaryData!; // Introduce non-nullable local variable

        <div class="card mb-4 shadow">
            <div class="card-header print-table-header-bg">
                Summary for period: @summary.ReportStartDate.ToString("yyyy-MM-dd") to @summary.ReportEndDate.ToString("yyyy-MM-dd")
            </div>
            <div class="card-body bg-white rounded-2">
                <dl class="row gx-0 gy-0">
                    <dt class="col-4 text-nowrap border-bottom pb-2">Invoiced Amounts</dt>
                    <dd class="col-8 text-end border-bottom mb-0 pb-2">&nbsp;</dd>

                    <dt class="col-4 ps-4 text-nowrap">@Html.DisplayNameFor(model => summary.TotalAmountInvoiced_Dues)</dt>
                    <dd class="col-8 text-end">@summary.TotalAmountInvoiced_Dues.ToString("C")</dd>

                    <dt class="col-4 ps-4 text-nowrap">@Html.DisplayNameFor(model => summary.TotalAmountInvoiced_Fine)</dt>
                    <dd class="col-8 text-end">@summary.TotalAmountInvoiced_Fine.ToString("C")</dd>

                    <dt class="col-4 ps-4 text-nowrap">@Html.DisplayNameFor(model => summary.TotalAmountInvoiced_LateFee)</dt>
                    <dd class="col-8 text-end">@summary.TotalAmountInvoiced_LateFee.ToString("C")</dd>

                    <dt class="col-4 ps-4 text-nowrap">@Html.DisplayNameFor(model => summary.TotalAmountInvoiced_MiscCharge)</dt>
                    <dd class="col-8 text-end">@summary.TotalAmountInvoiced_MiscCharge.ToString("C")</dd>

                    <dt class="col-4 fw-bold ps-4 text-nowrap">@Html.DisplayNameFor(model => summary.GrandTotalAmountInvoiced)</dt>
                    <dd class="col-8 fw-bold text-end">@summary.GrandTotalAmountInvoiced.ToString("C")</dd>

                    <dt class="col-4 border-bottom py-2 text-nowrap">Payments & Credits</dt>
                    <dd class="col-8 border-bottom mb-0 py-2 text-end">&nbsp;</dd>

                    <dt class="col-4 ps-4 text-nowrap">@Html.DisplayNameFor(model => summary.TotalPaymentsReceived)</dt>
                    <dd class="col-8 text-end">@summary.TotalPaymentsReceived.ToString("C")</dd>

                    <dt class="col-4 ps-4 text-nowrap">@Html.DisplayNameFor(model => summary.TotalCreditsIssued_RemainingValue)</dt>
                    <dd class="col-8 text-end">@summary.TotalCreditsIssued_RemainingValue.ToString("C")</dd>

                    <dt class="col-4 ps-4 text-nowrap">@Html.DisplayNameFor(model => summary.TotalCreditsApplied)</dt>
                    <dd class="col-8 text-end">@summary.TotalCreditsApplied.ToString("C")</dd>

                    <dt class="col-4 border-bottom py-2 text-nowrap">Net Change</dt>
                    <dd class="col-8 border-bottom mb-0 py-2 text-end">&nbsp;</dd>

                    <dt class="col-4 fw-bold ps-4 text-nowrap">@Html.DisplayNameFor(model => summary.NetChange)</dt>
                    <dd class="col-8 fw-bold text-end">@summary.NetChange.ToString("C")</dd>
                </dl>
            </div>
        </div>
    }
    else if (Request.Query.ContainsKey("StartDate") || Request.Query.ContainsKey("EndDate"))
    {
        <div class="alert alert-info shadow" role="alert">
            No summary data found for the selected period: @Model.StartDate.ToString("yyyy-MM-dd") to @Model.EndDate.ToString("yyyy-MM-dd"). Click "Run Report" to generate.
        </div>
    }
    else
    {
        <div class="alert alert-info shadow" role="alert">
            Please select a date range and run the report to view the summary.
        </div>
    }
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/site.js" asp-append-version="true"></script>

    <!-- Export to CSV Button Script -->
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var exportButton = document.getElementById('confirmExportRevenueSummaryBtn');
            if (exportButton) {
                exportButton.addEventListener('click', function() {
                    var currentPagePath = window.location.pathname;
                    var handlerQuery = 'handler=ExportToCsv';
                    var baseUrl = currentPagePath + '?' + handlerQuery;

                    var startDateValue = '@Model.StartDate.ToString("yyyy-MM-dd")';
                    var endDateValue = '@Model.EndDate.ToString("yyyy-MM-dd")';
                    var targetUrl = baseUrl + '&StartDate=' + encodeURIComponent(startDateValue) + '&EndDate=' + encodeURIComponent(endDateValue);

                    console.log('JS Export (RevenueSummary): Navigating to URL: ' + targetUrl);
                    window.location.href = targetUrl;

                    setTimeout(function() {
                        var modalElement = document.getElementById('exportRevenueSummaryConfirmModal');
                        if (modalElement) {
                            var modalInstance = bootstrap.Modal.getInstance(modalElement);
                            if (modalInstance) {
                                modalInstance.hide();
                            }
                        }
                    }, 500); // 500ms delay
                });
            }
        });
    </script>

    <!-- Print Button Script -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var printButton = document.getElementById('printReportButton');
            if (printButton) {
                printButton.addEventListener('click', function () {
                    window.print();
                });
            }
        });
    </script>

    <!-- Top Button Script -->
    <script>

        //Get the button
        var mybutton = document.getElementById("top-button");

        // When the user scrolls down 20px from the top of the document, show the button
        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 320 || document.documentElement.scrollTop > 320) {
                mybutton.style.display = "block";
            } else {
                mybutton.style.display = "none";
            }
        }

        // When the user clicks on the button, scroll to the top of the document
        function topFunction() {
            document.body.scrollTop = 0;
            document.documentElement.scrollTop = 0;
        }

    </script>
}
